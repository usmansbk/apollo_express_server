type Mutation {
  login(input: LoginInput!): AuthResponse 
  signUp(input: SignupInput!): AuthResponse 
  socialLogin(input: SocialLoginInput!): AuthResponse

  "Expects a signed jwt token in your Headers"
  updateEmail(input: UpdateEmailInput!): AuthResponse

  "Expects a signed jwt token in your Headers"
  updatePassword(input: UpdatePasswordInput!): AuthResponse

  updateProfile(input: UpdateProfileInput!): UserMutationResponse 
  uploadProfilePicture(input: String): UserMutationResponse

  "Send verification link to user email address"
  resendEmailVerificationLink: AuthResponse

  "Expects a signed jwt token jwt in your Headers"
  verifyEmailAddress: AuthResponse

  "Send reset password link to user email address"
  requestResetPassword: AuthResponse

  "Send update email link to user email address"
  requestChangeEmail: AuthResponse

  refreshToken: AuthResponse
  logout: AuthResponse

  "Expects a signed jwt token in your Headers"
  deleteAccount: AuthResponse

  "Send delete account link to user email address"
  requestDeleteAccount: AuthResponse

  "admin mutations"
  sudo(input: LoginInput!): AuthResponse
  createUser(input: CreateUserInput!): UserMutationResponse
  updateUser(input: UpdateUserInput!): UserMutationResponse
  deleteUser(id: ID!): UserMutationResponse
  batchCreateUser(users: [CreateUserInput]): BatchUserMutationResponse
  batchUpdateUser(users: [UpdateUserInput]): BatchUserMutationResponse
  batchDeleteUser(ids: [ID]): BatchUserMutationResponse

  "owner mutations"
  makeAdmin(email: String!): UserMutationResponse
  removeAdmin(email: String!): UserMutationResponse
}