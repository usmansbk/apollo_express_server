type User implements Profile {
  id: ID!
  fullName: String
  firstName: String!
  lastName: String!
  nickName: String
  picture: String 
  language: String
  email: String!
  roles: [Role!]
  identities: [SocialIdentity]
  emailVerified: Boolean
  phoneNumber: String
  updatedAt: Date!
  createdAt: Date!
}

type UserMutationResponse implements MutationResponse {
  code: String!
  success: Boolean!
  message: String!
  user: User
}

type BatchUserMutationResponse implements MutationResponse {
  code: String!
  success: Boolean!
  message: String!
  users: [User]
}

input UpdateProfileInput {
  firstName: String
  lastName: String
  nickName: String
  phoneNumber: String
}

input SearchUserFilterInput {
  id: ID
  firstName: String
  lastName: String
  size: Int
  after: ID
  sort: Order
}

input CreateUserInput {
  firstName: String!
  lastName: String!
  nickName: String
  picture: String 
  language: String
  email: String!
  roles: [Role!]
  emailVerified: Boolean
  phoneNumber: String
}

input UpdateUserInput {
  firstName: String
  lastName: String
  nickName: String
  picture: String 
  language: String
  email: String
  roles: [Role!]
  emailVerified: Boolean
  phoneNumber: String
}